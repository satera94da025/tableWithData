{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","axios","require","MockAdapter","min","max","initialState","data","id","name","time","Date","now","x","y","useState","activeUser","setActiveUser","dataToDisplay","setDataToDisplay","tableData","setTableData","usersList","useMemo","reduce","users","getRandomPosition","Math","floor","random","responseData","setResponseData","delayResponse","ceil","onGet","reply","get","then","response","useStyles","makeStyles","table","minWidth","useEffect","prev","filter","el","Number","classes","className","onChange","e","target","value","Object","keys","map","user","index","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","scope","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3fc0f7d.chunk.js","sourcesContent":["import React, {useEffect, useMemo, useState} from \"react\";\nimport \"./App.css\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\n\nexport default function App() {\n\n    const axios = require(\"axios\");\n    const MockAdapter = require(\"axios-mock-adapter\");\n\n    function getRandomIntInclusive(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    let initialState = {\n        data: [\n            {id: 1, name: \"Vasya\", time: Date.now(), x: 44, y: 5},\n            {id: 2, name: \"Petya\", time: Date.now(), x: 2, y: 6},\n            {id: 3, name: \"Sahsa\", time: Date.now(), x: 3, y: 7},\n            {id: 4, name: \"Dasha\", time: Date.now(), x: 4, y: 8},\n            {id: 5, name: \"Dima\", time: Date.now(), x: 5, y: 8},\n            {id: 6, name: \"Lyosha\", time: Date.now(), x: 6, y: 9}\n        ]\n    };\n\n    const [activeUser, setActiveUser] = useState(3);\n    const [dataToDisplay, setDataToDisplay] = useState([])\n    const [tableData, setTableData] = useState([...initialState.data])\n\n    const usersList = useMemo(() => {\n        return initialState.data.reduce((users, {id, name}) => {\n            // eslint-disable-next-line no-unused-expressions\n            !users[id] ? users[id] = name : users\n            return users\n        }, {});\n    }, [initialState.data]);\n\n    const getRandomPosition = (x) => Math.floor(Math.random() * x)\n\n    const [responseData, setResponseData] = useState([])\n\n    const handleSelect = (e) => setActiveUser(e.target.value);\n\n    const mock = new MockAdapter(axios, {delayResponse: getRandomIntInclusive(4000, 10000)});\n\n    mock.onGet(\"/users\", {}).reply(200, {\n        data: [\n            {id: 1, name: \"Vasya\", time: Date.now(), x: getRandomPosition(1), y: getRandomPosition(23)},\n            {id: 2, name: \"Petya\", time: Date.now(), x: getRandomPosition(11), y: getRandomPosition(21)},\n            {id: 3, name: \"Sahsa\", time: Date.now(), x: getRandomPosition(24), y: getRandomPosition(76)},\n            {id: 4, name: \"Dasha\", time: Date.now(), x: getRandomPosition(1), y: getRandomPosition(7)},\n            {id: 5, name: \"Dima\", time: Date.now(), x: getRandomPosition(3), y: getRandomPosition(6)},\n            {id: 6, name: \"Lyosha\", time: Date.now(), x: getRandomPosition(4), y: getRandomPosition(5)}\n        ]\n    });\n    axios\n        .get(\"/users\", {})\n        .then(function (response) {\n            setResponseData(response.data.data);\n        });\n    const useStyles = makeStyles({\n        table: {\n            minWidth: 650,\n        },\n    });\n\n    useEffect(() => {\n        setTableData(prev => [...prev, ...responseData])\n    }, [responseData])\n\n    useEffect(() => {\n        setDataToDisplay([...tableData].filter(el => Number(el.id) === Number(activeUser)))\n    }, [activeUser,tableData])\n\n    const classes = useStyles();\n    return (\n        <div>\n            <div className={'header'}>\n                <select onChange={handleSelect}>\n                    {Object.keys(usersList).map((user, index) => {\n                        return <option value={user} key={index}>{usersList[user]}</option>;\n                    })}\n                </select>\n            </div>\n            <div>\n            </div>\n            <TableContainer component={Paper}>\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Name</TableCell>\n                            <TableCell align=\"right\">Id</TableCell>\n                            <TableCell align=\"right\">Time&nbsp;</TableCell>\n                            <TableCell align=\"right\">X&nbsp;</TableCell>\n                            <TableCell align=\"right\">Y&nbsp;</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {dataToDisplay?.map((row, index) => (\n                            <TableRow key={index}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {usersList[activeUser]}\n                                </TableCell>\n                                <TableCell align=\"right\">{activeUser}</TableCell>\n                                <TableCell align=\"right\">{row.time} </TableCell>\n                                <TableCell align=\"right\">{row.x} </TableCell>\n                                <TableCell align=\"right\">{row.y} </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}